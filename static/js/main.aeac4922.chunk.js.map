{"version":3,"sources":["components/styles/SideBar.module.css","components/styles/Login.module.css","components/styles/ChatInput.module.css","components/styles/Chat.module.css","components/styles/Error.module.css","api/APIconnexion.ts","context/SocketContext.tsx","api/APIchat.ts","helpers/Address.ts","models/Message.ts","components/ChatBox.tsx","context/ErrorContext.tsx","components/ChatInput.tsx","api/APIcontacts.ts","helpers/misc.ts","models/Contact.ts","components/SideBar.tsx","components/Chat.tsx","components/ErrorModal.tsx","components/LoginSub.tsx","App.tsx","index.tsx","components/styles/ChatBox.module.css"],"names":["module","exports","post","address","console","log","Promise","resolve","reject","fetch","method","credentials","headers","Accept","body","JSON","stringify","username","password","then","res","json","data","err","catch","simpleCredentialGet","SocketContext","createContext","useSocket","useContext","SocketProvider","id","children","useState","socket","setSocket","useEffect","token","Cookies","get","newSocket","io","query","close","Provider","value","path","ADDRESS","postLogin","postSub","cookieValidate","getContacts","postContacts","getMessages","Message","chat","senderID","receiverID","date","_chat","_sender_ID","_receiver_ID","_date","this","ChatBox","chatting","messages","setMessages","scroll","useRef","current","scrollIntoView","scrollToBottom","receiver_ID","map","message","sender_ID","Date","className","styles","chatBar","length","MessageBubble","Math","random","ref","time","sent","received","onClick","classList","contains","timeShow","remove","add","getHours","getMinutes","ErrorContext","ErrorProvider","setErr","ChatInput","input","setInput","setError","submitRef","on","formatDate","prevMessages","off","chatInput","onSubmit","e","preventDefault","emit","msg","handleSubmit","type","placeholder","onChange","target","contact","contact_ID","searchContacts","contacts","sender","exists","forEach","Contact","_id","_username","_pic","floor","SideBar","setContacts","setChatting","newContact","setNewContact","update","setUpdate","prevContacts","a","sideBar","contactWrap","ContactButton","contactForm","error","finally","clicked","alt","src","pic","details","Chat","ErrorModal","container","autoFocus","LoginSub","props","setUsername","setPassword","passConfirm","setPassConfirm","toggle","setToggle","userRef","passRef","passConfRef","setId","setValidated","blur","h2","form","field","label","htmlFor","autoComplete","name","onFocus","hover","onBlur","button","create","App","validated","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeac4922.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"SideBar_sideBar__2j2RH\",\"contactWrap\":\"SideBar_contactWrap__SD8PI\",\"contact\":\"SideBar_contact__2rjAC\",\"contactForm\":\"SideBar_contactForm__2pnK8\",\"clicked\":\"SideBar_clicked__JrMIf\",\"details\":\"SideBar_details__3WYkN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerLog\":\"Login_containerLog__2x0J4\",\"containerSub\":\"Login_containerSub__2fA6r\",\"container\":\"Login_container__20jU1\",\"h2\":\"Login_h2__EwRY-\",\"form\":\"Login_form__88JeR\",\"field\":\"Login_field__1phYC\",\"input\":\"Login_input__3KyFb\",\"hover\":\"Login_hover__3gZ3E\",\"label\":\"Login_label__4AUJK\",\"button\":\"Login_button__3L_C8\",\"create\":\"Login_create__DmpM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatInput\":\"ChatInput_chatInput__2Nu07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__B2QoL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error_container__1Fwvs\"};","interface Data {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport const post = (post: Data, address: string) => {\r\n  console.log(\"posting\");\r\n  return new Promise((resolve, reject) => {\r\n    fetch(address, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"http://localhost:8080\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: post.username,\r\n        password: post.password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.err) {\r\n          reject(data);\r\n          return;\r\n        }\r\n        resolve(data);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n};\r\n\r\nexport const simpleCredentialGet = (address: string) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(address, {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => (data.err ? reject(data) : resolve(data)))\r\n      .catch((data) => reject(data));\r\n  });\r\n};\r\n","import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport io, { Socket } from \"socket.io-client\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst SocketContext = createContext<any>(null);\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\ntype Props = {\r\n  id: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function SocketProvider({ id, children }: Props) {\r\n  const [socket, setSocket] = useState<Socket>();\r\n\r\n  useEffect(() => {\r\n    const token: any = Cookies.get(\"token\");\r\n    const newSocket = io(\"http://localhost:8080\", {\r\n      query: { id, token },\r\n    });\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, [id]);\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>\r\n  );\r\n}\r\n","export const getMessages = (receiver_ID: string, address: string) => {\r\n  console.log(receiver_ID);\r\n  return new Promise((resolve, reject) => {\r\n    fetch(address, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        receiver_ID,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        data.err ? reject(data) : resolve(data);\r\n      });\r\n  });\r\n};\r\n","const path = \"https://immense-fjord-53526.herokuapp.com/\";\r\n\r\nexport const ADDRESS = {\r\n  postLogin: path,\r\n  postSub: path + \"sub\",\r\n  cookieValidate: path + \"cookie\",\r\n  getContacts: path + \"contact\",\r\n  postContacts: path + \"contact/post\",\r\n  getMessages: path + \"message\",\r\n};\r\n","export class Message {\r\n  private _chat: string;\r\n  private _sender_ID: string;\r\n  private _receiver_ID: string;\r\n  private _date: Date;\r\n\r\n  constructor(chat: string, senderID: string, receiverID: string, date: Date) {\r\n    this._chat = chat;\r\n    this._sender_ID = senderID;\r\n    this._receiver_ID = receiverID;\r\n    this._date = date;\r\n  }\r\n\r\n  public get chat(): string {\r\n    return this._chat;\r\n  }\r\n\r\n  public get sender_ID(): string {\r\n    return this._sender_ID;\r\n  }\r\n\r\n  public get receiver_ID(): string {\r\n    return this._receiver_ID;\r\n  }\r\n\r\n  public get date(): Date {\r\n    return this._date;\r\n  }\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { getMessages } from \"../api/APIchat\";\r\nimport { useSocket } from \"../context/SocketContext\";\r\nimport { ADDRESS } from \"../helpers/Address\";\r\nimport { Message } from \"../models/Message\";\r\nimport styles from \"./styles/ChatBox.module.css\";\r\n\r\ninterface ChatBoxProps {\r\n  chatting: string;\r\n  messages: Message[];\r\n  setMessages: Function;\r\n}\r\n\r\ninterface MessageBubbleProps {\r\n  chat: string;\r\n  date: Date;\r\n  receiver_ID: string;\r\n  chatting: string;\r\n}\r\n\r\nexport default function ChatBox({\r\n  chatting,\r\n  messages,\r\n  setMessages,\r\n}: ChatBoxProps) {\r\n  const scroll = useRef<HTMLLIElement>(null);\r\n  const socket = useSocket();\r\n  const scrollToBottom = () => {\r\n    scroll.current?.scrollIntoView();\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (!chatting) return;\r\n    getMessages(chatting, ADDRESS.getMessages)\r\n      .then((data: any) => {\r\n        let messages: Message[] = data.res.map((message: any) => {\r\n          return new Message(\r\n            message.chat,\r\n            message.sender_ID,\r\n            message.receiver_ID,\r\n            new Date(message.date)\r\n          );\r\n        });\r\n        setMessages(messages);\r\n      })\r\n      .catch((data) => console.log(data));\r\n  }, [chatting, setMessages]);\r\n\r\n  return (\r\n    <div className={styles.chatBar}>\r\n      {messages?.length ? (\r\n        <ul>\r\n          {messages.map((message) => {\r\n            return (\r\n              <MessageBubble\r\n                key={Math.random()}\r\n                chatting={chatting}\r\n                chat={message.chat}\r\n                receiver_ID={message.receiver_ID}\r\n                date={message.date}\r\n              />\r\n            );\r\n          })}\r\n          <li ref={scroll}></li>\r\n        </ul>\r\n      ) : (\r\n        <h6>Connect with your friends</h6>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function MessageBubble({\r\n  chat,\r\n  receiver_ID,\r\n  date,\r\n  chatting,\r\n}: MessageBubbleProps) {\r\n  //TODO: ADD MONTH AND DAY\r\n  const time = useRef<HTMLParagraphElement>(null);\r\n\r\n  return (\r\n    <li\r\n      className={receiver_ID === chatting ? styles.sent : styles.received}\r\n      onClick={() => {\r\n        time.current?.classList.contains(styles.timeShow)\r\n          ? time.current?.classList.remove(styles.timeShow)\r\n          : time.current?.classList.add(styles.timeShow);\r\n      }}\r\n    >\r\n      <p>{chat}</p>\r\n      <p ref={time} className={styles.time}>\r\n        {date.getHours()}h{date.getMinutes()}\r\n      </p>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const ErrorContext = createContext<any>(\"\");\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport const ErrorProvider = ({ children }: Props) => {\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  return (\r\n    <ErrorContext.Provider value={[err, setErr]}>\r\n      {children}\r\n    </ErrorContext.Provider>\r\n  );\r\n};\r\n","import { useState, useContext, useRef, useEffect } from \"react\";\r\nimport { ErrorContext } from \"../context/ErrorContext\";\r\nimport { useSocket } from \"../context/SocketContext\";\r\nimport { Message } from \"../models/Message\";\r\nimport styles from \"./styles/ChatInput.module.css\";\r\n\r\ninterface ChatInputProps {\r\n  chatting: string;\r\n  setMessages: Function;\r\n  id: string;\r\n}\r\n\r\nexport default function ChatInput({\r\n  chatting,\r\n  setMessages,\r\n  id,\r\n}: ChatInputProps) {\r\n  const socket = useSocket();\r\n  const [input, setInput] = useState<string>(\"\");\r\n  const [error, setError] = useContext(ErrorContext);\r\n  const submitRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!chatting) {\r\n      setError(\"Please choose a contact.\");\r\n      return;\r\n    }\r\n    if (!input) {\r\n      setError(\"Please input your message.\");\r\n      return;\r\n    }\r\n\r\n    socket.emit(\"emit\", { msg: input, receiver_ID: chatting });\r\n    const formatDate: Message = new Message(input, id, chatting, new Date());\r\n    setMessages((prevMessages: Message[]) => [...prevMessages, formatDate]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"newMessage\", (data: any) => {\r\n      if (data.sender_ID === chatting) {\r\n        const formatDate: Message = new Message(\r\n          data.chat,\r\n          data.sender_ID,\r\n          data.receiver_ID,\r\n          new Date(data.date)\r\n        );\r\n        setMessages((prevMessages: Message[]) => [...prevMessages, formatDate]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"newMessage\");\r\n    };\r\n  }, [socket, chatting, setMessages]);\r\n\r\n  return (\r\n    <div className={styles.chatInput}>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <input ref={submitRef} type=\"submit\" value=\"Send\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","interface Data {\r\n  contact?: string;\r\n  contact_ID?: string;\r\n}\r\n\r\nexport const postContacts = (post: Data, address: string) => {\r\n  let stringify = post.contact\r\n    ? { contact: post.contact }\r\n    : { contact_ID: post.contact_ID };\r\n  return new Promise((resolve, reject) => {\r\n    fetch(address, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"http://localhost:8080\",\r\n      },\r\n      body: JSON.stringify(stringify),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.err) {\r\n          reject(data);\r\n          return;\r\n        }\r\n        resolve(data);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n};\r\n","import { Contact } from \"../models/Contact\";\r\n\r\nexport const searchContacts = (\r\n  contacts: Contact[],\r\n  sender: string\r\n): boolean => {\r\n  let exists: boolean = false;\r\n\r\n  console.log(\"contacts\", contacts);\r\n\r\n  contacts.forEach((contact) => {\r\n    if (contact.id === sender) {\r\n      exists = true;\r\n    }\r\n  });\r\n\r\n  return exists;\r\n};\r\n","export class Contact {\r\n  private _id: string;\r\n  private _username: string;\r\n  private _pic: string;\r\n\r\n  constructor(id: string, username: string) {\r\n    this._id = id;\r\n    this._username = username;\r\n    this._pic = `https://randomuser.me/api/portraits/med/women/${Math.floor(\r\n      Math.random() * 75\r\n    )}.jpg`;\r\n  }\r\n\r\n  public get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  public get username(): string {\r\n    return this._username;\r\n  }\r\n\r\n  public get pic(): string {\r\n    return this._pic;\r\n  }\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { simpleCredentialGet } from \"../api/APIconnexion\";\r\nimport { postContacts } from \"../api/APIcontacts\";\r\nimport { ErrorContext } from \"../context/ErrorContext\";\r\nimport { useSocket } from \"../context/SocketContext\";\r\nimport { ADDRESS } from \"../helpers/Address\";\r\nimport { searchContacts } from \"../helpers/misc\";\r\nimport { Contact } from \"../models/Contact\";\r\nimport styles from \"./styles/SideBar.module.css\";\r\n\r\ninterface SideBarProps {\r\n  setContacts: Function;\r\n  contacts: Contact[];\r\n  chatting: string;\r\n  setChatting: Function;\r\n}\r\n\r\ninterface ContactButtonProps {\r\n  contact: Contact;\r\n  chatting: string;\r\n  setChatting: Function;\r\n}\r\n\r\nexport default function SideBar({\r\n  setContacts,\r\n  contacts,\r\n  chatting,\r\n  setChatting,\r\n}: SideBarProps) {\r\n  const socket = useSocket();\r\n  const [err, setErr] = useContext(ErrorContext);\r\n  const [newContact, setNewContact] = useState<string>(\"\");\r\n  const [update, setUpdate] = useState<number>(0);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    postContacts({ contact: newContact }, ADDRESS.postContacts)\r\n      .then((data: any) => {\r\n        setErr(data.res);\r\n      })\r\n      .catch((error) => {\r\n        setErr(error.err);\r\n      })\r\n      .finally(() => {\r\n        setNewContact(\"\");\r\n        setUpdate((update) => update + 1);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContacts([]);\r\n    simpleCredentialGet(ADDRESS.getContacts)\r\n      .then((data: any) => {\r\n        console.log(data);\r\n        if (data.length) {\r\n          data.forEach((contact: Contact) => {\r\n            setContacts((prevContacts: any) => [\r\n              ...prevContacts,\r\n              new Contact(contact.id, contact.username),\r\n            ]);\r\n          });\r\n        }\r\n      })\r\n      .catch((data) => console.log(\"rejected\", data));\r\n  }, [setContacts, update]);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    socket.on(\"newMessage\", async (data: any) => {\r\n      if (\r\n        data.sender_ID !== chatting &&\r\n        !searchContacts(contacts, data.sender_ID)\r\n      ) {\r\n        console.log(\"posting contact\");\r\n        try {\r\n          await postContacts(\r\n            { contact_ID: data.sender_ID },\r\n            ADDRESS.postContacts\r\n          );\r\n          setErr(\"New connexion sent a message\");\r\n          setUpdate((update) => update + 1);\r\n        } catch (error: any) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      socket.off(\"newMessage\");\r\n    };\r\n  }, [socket, chatting, contacts, setUpdate]);\r\n\r\n  return (\r\n    <div className={styles.sideBar}>\r\n      <div className={styles.contactWrap}>\r\n        {contacts.map((contact) => {\r\n          return (\r\n            <ContactButton\r\n              key={contact.id}\r\n              contact={contact}\r\n              chatting={chatting}\r\n              setChatting={setChatting}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <form className={styles.contactForm} onSubmit={(e) => handleSubmit(e)}>\r\n        <input type=\"submit\" value=\"Send\" />\r\n        <input\r\n          type=\"text\"\r\n          value={newContact}\r\n          onChange={(e) => setNewContact(e.target.value)}\r\n          placeholder=\"Add contact\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ContactButton({\r\n  contact,\r\n  chatting,\r\n  setChatting,\r\n}: ContactButtonProps) {\r\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    setChatting(contact.id);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={(e) => handleClick(e)}\r\n      key={contact.id}\r\n      className={\r\n        chatting === contact.id\r\n          ? `${styles.contact} ${styles.clicked}`\r\n          : styles.contact\r\n      }\r\n    >\r\n      <img alt={contact.username} src={contact.pic} />\r\n      <div className={styles.details}>\r\n        <h5>{contact.username}</h5>\r\n        <h6>{contact.username}</h6>\r\n      </div>\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { SocketProvider } from \"../context/SocketContext\";\r\nimport { Contact } from \"../models/Contact\";\r\nimport { Message } from \"../models/Message\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport SideBar from \"./SideBar\";\r\nimport styles from \"./styles/Chat.module.css\";\r\n\r\ntype Props = {\r\n  id: string;\r\n};\r\n\r\nexport default function Chat({ id }: Props) {\r\n  const [chatting, setChatting] = useState<string>(\"\");\r\n  const [contacts, setContacts] = useState<Contact[]>([]);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n\r\n  return (\r\n    <SocketProvider id={id}>\r\n      <div className={styles.chat}>\r\n        <SideBar\r\n          setContacts={setContacts}\r\n          contacts={contacts}\r\n          chatting={chatting}\r\n          setChatting={setChatting}\r\n        />\r\n        <ChatBox\r\n          chatting={chatting}\r\n          messages={messages}\r\n          setMessages={setMessages}\r\n        />\r\n        <ChatInput chatting={chatting} id={id} setMessages={setMessages} />\r\n      </div>\r\n    </SocketProvider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { ErrorContext } from \"../context/ErrorContext\";\r\nimport styles from \"./styles/Error.module.css\";\r\n\r\nexport default function ErrorModal() {\r\n  const [err, setErr] = useContext(ErrorContext);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <p>{err}</p>\r\n      <button autoFocus onClick={() => setErr(\"\")}>\r\n        OK\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef } from \"react\";\r\nimport { post } from \"../api/APIconnexion\";\r\nimport styles from \"./styles/Login.module.css\";\r\nimport { ADDRESS } from \"../helpers/Address\";\r\n\r\ninterface Props {\r\n  err: string;\r\n  setErr: Function;\r\n  setValidated: Function;\r\n  setId: Function;\r\n}\r\n\r\nexport default function LoginSub(props: Props) {\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [passConfirm, setPassConfirm] = useState<string>(\"\");\r\n  const [toggle, setToggle] = useState<boolean>(false);\r\n\r\n  const userRef = useRef<HTMLLabelElement>(null);\r\n  const passRef = useRef<HTMLLabelElement>(null);\r\n  const passConfRef = useRef<HTMLLabelElement>(null);\r\n\r\n  //SUBMIT\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!username) {\r\n      props.setErr(\"Username cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      props.setErr(\"Password cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    if (password.length < 8) {\r\n      props.setErr(\"Password needs to be at least 8 characters long.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (toggle) {\r\n        if (password !== passConfirm) {\r\n          props.setErr(\"Password confirmation is not equal to password.\");\r\n          return;\r\n        }\r\n\r\n        const res: any = await post({ username, password }, ADDRESS.postSub);\r\n\r\n        props.setErr(res.res);\r\n        setToggle(false);\r\n      } else {\r\n        const data: any = await post({ username, password }, ADDRESS.postLogin);\r\n        props.setId(data.id);\r\n        props.setValidated(true);\r\n      }\r\n    } catch (error: any) {\r\n      props.setErr(error.err);\r\n    }\r\n\r\n    setPassword(\"\");\r\n    setUsername(\"\");\r\n    setPassConfirm(\"\");\r\n    userRef.current?.blur();\r\n    passRef.current?.blur();\r\n    passConfRef.current?.blur();\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.h2}>{toggle ? \"Create Account\" : \"Log In\"}</h2>\r\n      <form className={styles.form} onSubmit={(e) => handleSubmit(e)}>\r\n        <div className={styles.field}>\r\n          <label className={styles.label} htmlFor=\"username\" ref={userRef}>\r\n            Username\r\n          </label>\r\n          <input\r\n            autoComplete=\"off\"\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            onFocus={() => userRef.current?.classList.add(styles.hover)}\r\n            onBlur={() =>\r\n              !username ? userRef.current?.classList.remove(styles.hover) : \"\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className={styles.field}>\r\n          <label className={styles.label} htmlFor=\"password\" ref={passRef}>\r\n            Password\r\n          </label>\r\n          <input\r\n            autoComplete=\"off\"\r\n            className={styles.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onFocus={() => passRef.current?.classList.add(styles.hover)}\r\n            onBlur={() =>\r\n              !password ? passRef.current?.classList.remove(styles.hover) : \"\"\r\n            }\r\n          />\r\n        </div>\r\n        {toggle ? (\r\n          <div className={styles.field}>\r\n            <label\r\n              className={styles.label}\r\n              htmlFor=\"passConf\"\r\n              ref={passConfRef}\r\n            >\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              autoComplete=\"off\"\r\n              className={styles.input}\r\n              type=\"password\"\r\n              name=\"passConf\"\r\n              id=\"passConf\"\r\n              value={passConfirm}\r\n              onChange={(e) => setPassConfirm(e.target.value)}\r\n              onFocus={() => passConfRef.current?.classList.add(styles.hover)}\r\n              onBlur={() =>\r\n                !passConfirm\r\n                  ? passConfRef.current?.classList.remove(styles.hover)\r\n                  : \"\"\r\n              }\r\n            />\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <input\r\n          className={styles.button}\r\n          type=\"submit\"\r\n          value={toggle ? \"Create account\" : \"Log In\"}\r\n        />\r\n      </form>\r\n      <button\r\n        className={styles.create}\r\n        onClick={() => setToggle(toggle ? false : true)}\r\n      >\r\n        {toggle ? \"Log in\" : \"Create Account\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { simpleCredentialGet } from \"./api/APIconnexion\";\r\nimport \"./app.css\";\r\nimport Chat from \"./components/Chat\";\r\nimport ErrorModal from \"./components/ErrorModal\";\r\nimport LoginSub from \"./components/LoginSub\";\r\nimport { ErrorContext } from \"./context/ErrorContext\";\r\nimport { ADDRESS } from \"./helpers/Address\";\r\n\r\nfunction App() {\r\n  const [err, setErr] = useContext(ErrorContext);\r\n  const [validated, setValidated] = useState<boolean>(false);\r\n  const [id, setId] = useState<string>(\"\");\r\n\r\n  //cause HTTP only cookie\r\n  useEffect(() => {\r\n    if (validated) return;\r\n\r\n    simpleCredentialGet(ADDRESS.cookieValidate)\r\n      .then((data: any) => {\r\n        setId(data.id);\r\n        setValidated(true);\r\n      })\r\n      .catch((data) => console.log(\"rejected\", data.err));\r\n  }, [validated]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {err ? <ErrorModal /> : \"\"}\r\n      {validated ? (\r\n        <Chat id={id} />\r\n      ) : (\r\n        <LoginSub\r\n          setId={setId}\r\n          err={err}\r\n          setErr={setErr}\r\n          setValidated={setValidated}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { ErrorProvider } from \"./context/ErrorContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ErrorProvider>\r\n      <App />\r\n    </ErrorProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatBar\":\"ChatBox_chatBar__3DMWP\",\"sent\":\"ChatBox_sent__2HGMR\",\"received\":\"ChatBox_received__1hg27\",\"time\":\"ChatBox_time__5Mh6p\",\"timeShow\":\"ChatBox_timeShow__1yX8o\"};"],"sourceRoot":""}