{"version":3,"sources":["components/styles/SideBar.module.css","components/styles/Login.module.css","components/styles/ChatInput.module.css","components/styles/Chat.module.css","components/styles/Error.module.css","context/SocketContext.tsx","api/APIchat.ts","context/AuthContext.tsx","helpers/Address.ts","models/Message.ts","components/ChatBox.tsx","context/ErrorContext.tsx","components/ChatInput.tsx","api/APIconnexion.ts","api/APIcontacts.ts","helpers/misc.ts","models/Contact.ts","components/SideBar.tsx","components/Chat.tsx","components/ErrorModal.tsx","components/LoginSub.tsx","App.tsx","index.tsx","components/styles/ChatBox.module.css"],"names":["module","exports","SocketContext","createContext","useSocket","useContext","SocketProvider","id","children","useState","socket","setSocket","useEffect","token","localStorage","getItem","newSocket","io","query","close","Provider","value","AuthContext","AuthProvider","setToken","path","ADDRESS","postLogin","postSub","cookieValidate","getContacts","postContacts","getMessages","Message","chat","senderID","receiverID","date","_chat","_sender_ID","_receiver_ID","_date","this","ChatBox","chatting","messages","setMessages","scroll","useRef","current","scrollIntoView","scrollToBottom","receiver_ID","address","console","log","Promise","resolve","reject","fetch","method","credentials","headers","Accept","body","JSON","stringify","then","res","json","data","err","map","message","sender_ID","Date","catch","className","styles","chatBar","length","MessageBubble","Math","random","ref","time","sent","received","onClick","classList","contains","timeShow","remove","add","getHours","getMinutes","ErrorContext","ErrorProvider","setErr","ChatInput","input","setInput","setError","submitRef","on","formatDate","prevMessages","off","chatInput","onSubmit","e","preventDefault","emit","msg","handleSubmit","type","placeholder","onChange","target","post","username","password","contact","contact_ID","searchContacts","contacts","sender","exists","forEach","Contact","_id","_username","_pic","floor","SideBar","setContacts","setChatting","newContact","setNewContact","update","setUpdate","simpleCredentialGet","prevContacts","a","sideBar","contactWrap","ContactButton","contactForm","error","finally","clicked","alt","src","pic","details","Chat","ErrorModal","container","autoFocus","LoginSub","props","setUsername","setPassword","passConfirm","setPassConfirm","toggle","setToggle","userRef","passRef","passConfRef","setId","setItem","blur","h2","form","field","label","htmlFor","autoComplete","name","onFocus","hover","onBlur","button","create","App","auth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa27425d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideBar\":\"SideBar_sideBar__2slkt\",\"contactWrap\":\"SideBar_contactWrap__2Y-I7\",\"contact\":\"SideBar_contact__1-7hI\",\"contactForm\":\"SideBar_contactForm__7wYwQ\",\"clicked\":\"SideBar_clicked__2Bril\",\"details\":\"SideBar_details__2WCzg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerLog\":\"Login_containerLog__1PFQW\",\"containerSub\":\"Login_containerSub__2QA6V\",\"container\":\"Login_container__BVt0Q\",\"h2\":\"Login_h2__3qes3\",\"form\":\"Login_form__20mDi\",\"field\":\"Login_field__36tDz\",\"input\":\"Login_input__2OHlW\",\"hover\":\"Login_hover__i5Kgl\",\"label\":\"Login_label__11nFr\",\"button\":\"Login_button__3zOW1\",\"create\":\"Login_create__2Dm5R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatInput\":\"ChatInput_chatInput__2u11C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chat\":\"Chat_chat__11avm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error_container__1pJlb\"};","import React, { useState, createContext, useContext, useEffect } from \"react\";\r\nimport io, { Socket } from \"socket.io-client\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst SocketContext = createContext<any>(null);\r\n\r\nexport function useSocket() {\r\n  return useContext(SocketContext);\r\n}\r\n\r\ntype Props = {\r\n  id: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport function SocketProvider({ id, children }: Props) {\r\n  const [socket, setSocket] = useState<Socket>();\r\n\r\n  useEffect(() => {\r\n    const token: any = localStorage.getItem(\"token\");\r\n    const newSocket = io(\"http://localhost:8080\", {\r\n      query: { id, token },\r\n    });\r\n    setSocket(newSocket);\r\n\r\n    return () => {\r\n      newSocket.close();\r\n    };\r\n  }, [id]);\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>{children}</SocketContext.Provider>\r\n  );\r\n}\r\n","export const getMessages = (\r\n  receiver_ID: string,\r\n  address: string,\r\n  token: string\r\n) => {\r\n  console.log(receiver_ID);\r\n  return new Promise((resolve, reject) => {\r\n    fetch(address, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        receiver_ID,\r\n        token,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        data.err ? reject(data) : resolve(data);\r\n      });\r\n  });\r\n};\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext<any>(\"\");\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport const AuthProvider = ({ children }: Props) => {\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  return (\r\n    <AuthContext.Provider value={[token, setToken]}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","const path =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:8080/\"\r\n    : \"https://immense-fjord-53526.herokuapp.com/\";\r\n\r\nexport const ADDRESS = {\r\n  postLogin: path,\r\n  postSub: path + \"sub\",\r\n  cookieValidate: path + \"cookie\",\r\n  getContacts: path + \"contact\",\r\n  postContacts: path + \"contact/post\",\r\n  getMessages: path + \"message\",\r\n};\r\n","export class Message {\r\n  private _chat: string;\r\n  private _sender_ID: string;\r\n  private _receiver_ID: string;\r\n  private _date: Date;\r\n\r\n  constructor(chat: string, senderID: string, receiverID: string, date: Date) {\r\n    this._chat = chat;\r\n    this._sender_ID = senderID;\r\n    this._receiver_ID = receiverID;\r\n    this._date = date;\r\n  }\r\n\r\n  public get chat(): string {\r\n    return this._chat;\r\n  }\r\n\r\n  public get sender_ID(): string {\r\n    return this._sender_ID;\r\n  }\r\n\r\n  public get receiver_ID(): string {\r\n    return this._receiver_ID;\r\n  }\r\n\r\n  public get date(): Date {\r\n    return this._date;\r\n  }\r\n}\r\n","import { useContext, useEffect, useRef } from \"react\";\r\nimport { getMessages } from \"../api/APIchat\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useSocket } from \"../context/SocketContext\";\r\nimport { ADDRESS } from \"../helpers/Address\";\r\nimport { Message } from \"../models/Message\";\r\nimport styles from \"./styles/ChatBox.module.css\";\r\n\r\ninterface ChatBoxProps {\r\n  chatting: string;\r\n  messages: Message[];\r\n  setMessages: Function;\r\n}\r\n\r\ninterface MessageBubbleProps {\r\n  chat: string;\r\n  date: Date;\r\n  receiver_ID: string;\r\n  chatting: string;\r\n}\r\n\r\nexport default function ChatBox({\r\n  chatting,\r\n  messages,\r\n  setMessages,\r\n}: ChatBoxProps) {\r\n  const scroll = useRef<HTMLLIElement>(null);\r\n  const socket = useSocket();\r\n  const [token, setToken] = useContext(AuthContext);\r\n  const scrollToBottom = () => {\r\n    scroll.current?.scrollIntoView();\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (!chatting) return;\r\n    getMessages(chatting, ADDRESS.getMessages, token)\r\n      .then((data: any) => {\r\n        let messages: Message[] = data.res.map((message: any) => {\r\n          return new Message(\r\n            message.chat,\r\n            message.sender_ID,\r\n            message.receiver_ID,\r\n            new Date(message.date)\r\n          );\r\n        });\r\n        setMessages(messages);\r\n      })\r\n      .catch((data) => console.log(data));\r\n  }, [chatting, setMessages]);\r\n\r\n  return (\r\n    <div className={styles.chatBar}>\r\n      {messages?.length ? (\r\n        <ul>\r\n          {messages.map((message) => {\r\n            return (\r\n              <MessageBubble\r\n                key={Math.random()}\r\n                chatting={chatting}\r\n                chat={message.chat}\r\n                receiver_ID={message.receiver_ID}\r\n                date={message.date}\r\n              />\r\n            );\r\n          })}\r\n          <li ref={scroll}></li>\r\n        </ul>\r\n      ) : (\r\n        <h6>Connect with your friends</h6>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function MessageBubble({\r\n  chat,\r\n  receiver_ID,\r\n  date,\r\n  chatting,\r\n}: MessageBubbleProps) {\r\n  //TODO: ADD MONTH AND DAY\r\n  const time = useRef<HTMLParagraphElement>(null);\r\n\r\n  return (\r\n    <li\r\n      className={receiver_ID === chatting ? styles.sent : styles.received}\r\n      onClick={() => {\r\n        time.current?.classList.contains(styles.timeShow)\r\n          ? time.current?.classList.remove(styles.timeShow)\r\n          : time.current?.classList.add(styles.timeShow);\r\n      }}\r\n    >\r\n      <p>{chat}</p>\r\n      <p ref={time} className={styles.time}>\r\n        {date.getHours()}h{date.getMinutes()}\r\n      </p>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState, createContext } from \"react\";\r\n\r\nexport const ErrorContext = createContext<any>(\"\");\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport const ErrorProvider = ({ children }: Props) => {\r\n  const [err, setErr] = useState(\"\");\r\n\r\n  return (\r\n    <ErrorContext.Provider value={[err, setErr]}>\r\n      {children}\r\n    </ErrorContext.Provider>\r\n  );\r\n};\r\n","import { useState, useContext, useRef, useEffect } from \"react\";\r\nimport { ErrorContext } from \"../context/ErrorContext\";\r\nimport { useSocket } from \"../context/SocketContext\";\r\nimport { Message } from \"../models/Message\";\r\nimport styles from \"./styles/ChatInput.module.css\";\r\n\r\ninterface ChatInputProps {\r\n  chatting: string;\r\n  setMessages: Function;\r\n  id: string;\r\n}\r\n\r\nexport default function ChatInput({\r\n  chatting,\r\n  setMessages,\r\n  id,\r\n}: ChatInputProps) {\r\n  const socket = useSocket();\r\n  const [input, setInput] = useState<string>(\"\");\r\n  const [error, setError] = useContext(ErrorContext);\r\n  const submitRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!chatting) {\r\n      setError(\"Please choose a contact.\");\r\n      return;\r\n    }\r\n    if (!input) {\r\n      setError(\"Please input your message.\");\r\n      return;\r\n    }\r\n\r\n    socket.emit(\"emit\", { msg: input, receiver_ID: chatting });\r\n    const formatDate: Message = new Message(input, id, chatting, new Date());\r\n    setMessages((prevMessages: Message[]) => [...prevMessages, formatDate]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n    socket.on(\"newMessage\", (data: any) => {\r\n      if (data.sender_ID === chatting) {\r\n        const formatDate: Message = new Message(\r\n          data.chat,\r\n          data.sender_ID,\r\n          data.receiver_ID,\r\n          new Date(data.date)\r\n        );\r\n        setMessages((prevMessages: Message[]) => [...prevMessages, formatDate]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"newMessage\");\r\n    };\r\n  }, [socket, chatting, setMessages]);\r\n\r\n  return (\r\n    <div className={styles.chatInput}>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n        <input ref={submitRef} type=\"submit\" value=\"Send\" />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","interface Data {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport const post = (post: Data, address: string) => {\r\n  console.log(\"posting\");\r\n  return new Promise((resolve, reject) => {\r\n    fetch(address, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"http://localhost:8080\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: post.username,\r\n        password: post.password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.err) {\r\n          reject(data);\r\n          return;\r\n        }\r\n        resolve(data);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n};\r\n\r\nexport const simpleCredentialGet = (address: string, token: string) => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(address, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ token }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => (data.err ? reject(data) : resolve(data)))\r\n      .catch((data) => reject(data));\r\n  });\r\n};\r\n","interface Data {\r\n  contact?: string;\r\n  contact_ID?: string;\r\n}\r\n\r\nexport const postContacts = (post: Data, address: string, token: string) => {\r\n  let stringify = post.contact\r\n    ? { contact: post.contact }\r\n    : { contact_ID: post.contact_ID };\r\n  return new Promise((resolve, reject) => {\r\n    fetch(address, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"http://localhost:8080\",\r\n      },\r\n      body: JSON.stringify({ ...stringify, token }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.err) {\r\n          reject(data);\r\n          return;\r\n        }\r\n        resolve(data);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n};\r\n","import { Contact } from \"../models/Contact\";\r\n\r\nexport const searchContacts = (\r\n  contacts: Contact[],\r\n  sender: string\r\n): boolean => {\r\n  let exists: boolean = false;\r\n\r\n  console.log(\"contacts\", contacts);\r\n\r\n  contacts.forEach((contact) => {\r\n    if (contact.id === sender) {\r\n      exists = true;\r\n    }\r\n  });\r\n\r\n  return exists;\r\n};\r\n","export class Contact {\r\n  private _id: string;\r\n  private _username: string;\r\n  private _pic: string;\r\n\r\n  constructor(id: string, username: string) {\r\n    this._id = id;\r\n    this._username = username;\r\n    this._pic = `https://randomuser.me/api/portraits/med/women/${Math.floor(\r\n      Math.random() * 75\r\n    )}.jpg`;\r\n  }\r\n\r\n  public get id(): string {\r\n    return this._id;\r\n  }\r\n\r\n  public get username(): string {\r\n    return this._username;\r\n  }\r\n\r\n  public get pic(): string {\r\n    return this._pic;\r\n  }\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { simpleCredentialGet } from \"../api/APIconnexion\";\r\nimport { postContacts } from \"../api/APIcontacts\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { ErrorContext } from \"../context/ErrorContext\";\r\nimport { useSocket } from \"../context/SocketContext\";\r\nimport { ADDRESS } from \"../helpers/Address\";\r\nimport { searchContacts } from \"../helpers/misc\";\r\nimport { Contact } from \"../models/Contact\";\r\nimport styles from \"./styles/SideBar.module.css\";\r\n\r\ninterface SideBarProps {\r\n  setContacts: Function;\r\n  contacts: Contact[];\r\n  chatting: string;\r\n  setChatting: Function;\r\n}\r\n\r\ninterface ContactButtonProps {\r\n  contact: Contact;\r\n  chatting: string;\r\n  setChatting: Function;\r\n}\r\n\r\nexport default function SideBar({\r\n  setContacts,\r\n  contacts,\r\n  chatting,\r\n  setChatting,\r\n}: SideBarProps) {\r\n  const socket = useSocket();\r\n  const [err, setErr] = useContext(ErrorContext);\r\n  const [newContact, setNewContact] = useState<string>(\"\");\r\n  const [update, setUpdate] = useState<number>(0);\r\n  const [token, setToken] = useContext(AuthContext);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    postContacts({ contact: newContact }, ADDRESS.postContacts, token)\r\n      .then((data: any) => {\r\n        setErr(data.res);\r\n      })\r\n      .catch((error) => {\r\n        setErr(error.err);\r\n      })\r\n      .finally(() => {\r\n        setNewContact(\"\");\r\n        setUpdate((update) => update + 1);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setContacts([]);\r\n    simpleCredentialGet(ADDRESS.getContacts, token)\r\n      .then((data: any) => {\r\n        console.log(data);\r\n        if (data.length) {\r\n          data.forEach((contact: Contact) => {\r\n            setContacts((prevContacts: any) => [\r\n              ...prevContacts,\r\n              new Contact(contact.id, contact.username),\r\n            ]);\r\n          });\r\n        }\r\n      })\r\n      .catch((data) => console.log(\"rejected\", data));\r\n  }, [setContacts, update]);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    socket.on(\"newMessage\", async (data: any) => {\r\n      if (\r\n        data.sender_ID !== chatting &&\r\n        !searchContacts(contacts, data.sender_ID)\r\n      ) {\r\n        console.log(\"posting contact\");\r\n        try {\r\n          await postContacts(\r\n            { contact_ID: data.sender_ID },\r\n            ADDRESS.postContacts,\r\n            token\r\n          );\r\n          setErr(\"New connexion sent a message\");\r\n          setUpdate((update) => update + 1);\r\n        } catch (error: any) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      socket.off(\"newMessage\");\r\n    };\r\n  }, [socket, chatting, contacts, setUpdate]);\r\n\r\n  return (\r\n    <div className={styles.sideBar}>\r\n      <div className={styles.contactWrap}>\r\n        {contacts.map((contact) => {\r\n          return (\r\n            <ContactButton\r\n              key={contact.id}\r\n              contact={contact}\r\n              chatting={chatting}\r\n              setChatting={setChatting}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <form className={styles.contactForm} onSubmit={(e) => handleSubmit(e)}>\r\n        <input type=\"submit\" value=\"Send\" />\r\n        <input\r\n          type=\"text\"\r\n          value={newContact}\r\n          onChange={(e) => setNewContact(e.target.value)}\r\n          placeholder=\"Add contact\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ContactButton({\r\n  contact,\r\n  chatting,\r\n  setChatting,\r\n}: ContactButtonProps) {\r\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    setChatting(contact.id);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={(e) => handleClick(e)}\r\n      key={contact.id}\r\n      className={\r\n        chatting === contact.id\r\n          ? `${styles.contact} ${styles.clicked}`\r\n          : styles.contact\r\n      }\r\n    >\r\n      <img alt={contact.username} src={contact.pic} />\r\n      <div className={styles.details}>\r\n        <h5>{contact.username}</h5>\r\n        <h6>{contact.username}</h6>\r\n      </div>\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { SocketProvider } from \"../context/SocketContext\";\r\nimport { Contact } from \"../models/Contact\";\r\nimport { Message } from \"../models/Message\";\r\nimport ChatBox from \"./ChatBox\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport SideBar from \"./SideBar\";\r\nimport styles from \"./styles/Chat.module.css\";\r\n\r\ntype Props = {\r\n  id: string;\r\n};\r\n\r\nexport default function Chat({ id }: Props) {\r\n  const [chatting, setChatting] = useState<string>(\"\");\r\n  const [contacts, setContacts] = useState<Contact[]>([]);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n\r\n  return (\r\n    <SocketProvider id={id}>\r\n      <div className={styles.chat}>\r\n        <SideBar\r\n          setContacts={setContacts}\r\n          contacts={contacts}\r\n          chatting={chatting}\r\n          setChatting={setChatting}\r\n        />\r\n        <ChatBox\r\n          chatting={chatting}\r\n          messages={messages}\r\n          setMessages={setMessages}\r\n        />\r\n        <ChatInput chatting={chatting} id={id} setMessages={setMessages} />\r\n      </div>\r\n    </SocketProvider>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { ErrorContext } from \"../context/ErrorContext\";\r\nimport styles from \"./styles/Error.module.css\";\r\n\r\nexport default function ErrorModal() {\r\n  const [err, setErr] = useContext(ErrorContext);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <p>{err}</p>\r\n      <button autoFocus onClick={() => setErr(\"\")}>\r\n        OK\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useRef, useContext } from \"react\";\r\nimport { post } from \"../api/APIconnexion\";\r\nimport styles from \"./styles/Login.module.css\";\r\nimport { ADDRESS } from \"../helpers/Address\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\ninterface Props {\r\n  err: string;\r\n  setErr: Function;\r\n  setId: Function;\r\n}\r\n\r\nexport default function LoginSub(props: Props) {\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [passConfirm, setPassConfirm] = useState<string>(\"\");\r\n  const [toggle, setToggle] = useState<boolean>(false);\r\n  const [token, setToken] = useContext(AuthContext);\r\n\r\n  const userRef = useRef<HTMLLabelElement>(null);\r\n  const passRef = useRef<HTMLLabelElement>(null);\r\n  const passConfRef = useRef<HTMLLabelElement>(null);\r\n\r\n  //SUBMIT\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (!username) {\r\n      props.setErr(\"Username cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    if (!password) {\r\n      props.setErr(\"Password cannot be empty.\");\r\n      return;\r\n    }\r\n\r\n    if (password.length < 8) {\r\n      props.setErr(\"Password needs to be at least 8 characters long.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (toggle) {\r\n        if (password !== passConfirm) {\r\n          props.setErr(\"Password confirmation is not equal to password.\");\r\n          return;\r\n        }\r\n\r\n        const res: any = await post({ username, password }, ADDRESS.postSub);\r\n\r\n        props.setErr(res.res);\r\n        setToggle(false);\r\n      } else {\r\n        const data: any = await post({ username, password }, ADDRESS.postLogin);\r\n        props.setId(data.id);\r\n        localStorage.setItem(\"token\", data.token);\r\n        setToken(data.token);\r\n      }\r\n    } catch (error: any) {\r\n      props.setErr(error.err);\r\n    }\r\n\r\n    setPassword(\"\");\r\n    setUsername(\"\");\r\n    setPassConfirm(\"\");\r\n    userRef.current?.blur();\r\n    passRef.current?.blur();\r\n    passConfRef.current?.blur();\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.h2}>{toggle ? \"Create Account\" : \"Log In\"}</h2>\r\n      <form className={styles.form} onSubmit={(e) => handleSubmit(e)}>\r\n        <div className={styles.field}>\r\n          <label className={styles.label} htmlFor=\"username\" ref={userRef}>\r\n            Username\r\n          </label>\r\n          <input\r\n            autoComplete=\"off\"\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            onFocus={() => userRef.current?.classList.add(styles.hover)}\r\n            onBlur={() =>\r\n              !username ? userRef.current?.classList.remove(styles.hover) : \"\"\r\n            }\r\n          />\r\n        </div>\r\n        <div className={styles.field}>\r\n          <label className={styles.label} htmlFor=\"password\" ref={passRef}>\r\n            Password\r\n          </label>\r\n          <input\r\n            autoComplete=\"off\"\r\n            className={styles.input}\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            onFocus={() => passRef.current?.classList.add(styles.hover)}\r\n            onBlur={() =>\r\n              !password ? passRef.current?.classList.remove(styles.hover) : \"\"\r\n            }\r\n          />\r\n        </div>\r\n        {toggle ? (\r\n          <div className={styles.field}>\r\n            <label\r\n              className={styles.label}\r\n              htmlFor=\"passConf\"\r\n              ref={passConfRef}\r\n            >\r\n              Confirm Password\r\n            </label>\r\n            <input\r\n              autoComplete=\"off\"\r\n              className={styles.input}\r\n              type=\"password\"\r\n              name=\"passConf\"\r\n              id=\"passConf\"\r\n              value={passConfirm}\r\n              onChange={(e) => setPassConfirm(e.target.value)}\r\n              onFocus={() => passConfRef.current?.classList.add(styles.hover)}\r\n              onBlur={() =>\r\n                !passConfirm\r\n                  ? passConfRef.current?.classList.remove(styles.hover)\r\n                  : \"\"\r\n              }\r\n            />\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <input\r\n          className={styles.button}\r\n          type=\"submit\"\r\n          value={toggle ? \"Create account\" : \"Log In\"}\r\n        />\r\n      </form>\r\n      <button\r\n        className={styles.create}\r\n        onClick={() => setToggle(toggle ? false : true)}\r\n      >\r\n        {toggle ? \"Log in\" : \"Create Account\"}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { simpleCredentialGet } from \"./api/APIconnexion\";\r\nimport \"./app.css\";\r\nimport Chat from \"./components/Chat\";\r\nimport ErrorModal from \"./components/ErrorModal\";\r\nimport LoginSub from \"./components/LoginSub\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport { ErrorContext } from \"./context/ErrorContext\";\r\nimport { ADDRESS } from \"./helpers/Address\";\r\n\r\nfunction App() {\r\n  const [err, setErr] = useContext(ErrorContext);\r\n  const [token, setToken] = useContext(AuthContext);\r\n  const [id, setId] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (token) return;\r\n\r\n    let auth = localStorage.getItem(\"token\");\r\n    if (auth) {\r\n      setToken(auth);\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {err ? <ErrorModal /> : \"\"}\r\n      {token ? (\r\n        <Chat id={id} />\r\n      ) : (\r\n        <LoginSub setId={setId} err={err} setErr={setErr} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { AuthProvider } from \"./context/AuthContext\";\r\nimport { ErrorProvider } from \"./context/ErrorContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ErrorProvider>\r\n      <AuthProvider>\r\n        <App />\r\n      </AuthProvider>\r\n    </ErrorProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatBar\":\"ChatBox_chatBar__2ADuJ\",\"sent\":\"ChatBox_sent__-lKmg\",\"received\":\"ChatBox_received__24wL9\",\"time\":\"ChatBox_time__UDysP\",\"timeShow\":\"ChatBox_timeShow__1YP1J\"};"],"sourceRoot":""}